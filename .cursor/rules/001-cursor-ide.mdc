---
description: Правила организации конфигурации Cursor IDE и структуры файлов правил. Определяют современную структуру `.cursor/` папки, запрещают использование устаревшего `.cursorrules` файла и устанавливают стандарты для организации правил по категориям.
globs: 
alwaysApply: true
---
# Cursor IDE Configuration Rules

**Описание**: Правила организации конфигурации Cursor IDE и структуры файлов правил. Определяют современную структуру `.cursor/` папки, запрещают использование устаревшего `.cursorrules` файла и устанавливают стандарты для организации правил по категориям.

## File Structure Rules

### КРИТИЧЕСКИЕ ОГРАНИЧЕНИЯ ДЛЯ ФАЙЛОВ CURSOR

#### ❌ ЗАПРЕЩЕНО: Создание .cursorrules файла
- **НИКОГДА не создавайте файл `.cursorrules`** - это устаревший легаси формат
- Согласно последней документации Cursor IDE, файл `.cursorrules` считается deprecated
- Вместо него используйте современную структуру в папке `.cursor/`

#### ✅ ПРАВИЛЬНАЯ СТРУКТУРА CURSOR
```
.cursor/
├── index.mdc          # Основной файл правил
└── rules/             # Папка для организации правил по категориям
    ├── git-workflow.mdc
    ├── typescript-patterns.mdc
    ├── ui-components.mdc
    ├── raycast-api.mdc
    ├── ai-providers.mdc
    └── cursor-ide.mdc
```

### Правила организации файлов

#### Структура конфигурации
- Используйте `.cursor/index.mdc` как главный файл правил
- Разбивайте правила по категориям в папке `.cursor/rules/`
- Каждая категория должна быть в отдельном `.mdc` файле
- Используйте описательные имена файлов (kebab-case)

#### Формат файлов
- Все файлы правил должны быть в формате Markdown (`.mdc`)
- Используйте четкую структуру заголовков для навигации
- Включайте примеры кода в соответствующих блоках
- Документируйте критические ограничения и запреты

### Миграция с устаревших форматов

#### Если существует .cursorrules
```bash
# Удалите устаревший файл
rm .cursorrules

# Перенесите правила в современную структуру
mkdir -p .cursor/rules
# Разбейте содержимое на логические категории
```

#### Преимущества новой структуры
- Лучшая организация правил по категориям
- Возможность включения/отключения отдельных категорий
- Улучшенная читаемость и поддержка
- Соответствие современным стандартам Cursor IDE

## Рекомендации по содержанию

### Что включать в правила
- Архитектурные принципы проекта
- Стандарты кода и именования
- Паттерны разработки для используемых технологий
- Правила работы с Git и коммитами
- Специфичные для проекта конфигурации

### Что НЕ включать
- Общие правила языка программирования (TypeScript, JavaScript)
- Стандартные ESLint/Prettier правила
- Документацию внешних библиотек
- Временные заметки или TODO

## Обновление правил

### Процесс изменения
1. Всегда работайте с файлами в `.cursor/` папке
2. Не создавайте дублирующих правил в разных файлах
3. Обновляйте `.cursor/index.mdc` при добавлении новых категорий
4. Тестируйте правила на практике перед коммитом

### Валидация
- Проверяйте синтаксис Markdown
- Убеждайтесь в корректности примеров кода
- Следите за консистентностью между файлами правил
- Регулярно актуализируйте устаревшие правила

## Cursor IDE Configuration

### КРИТИЧЕСКИЕ ОГРАНИЧЕНИЯ ДЛЯ ФАЙЛОВ CURSOR
- **❌ НИКОГДА не создавайте файл `.cursorrules`** - это устаревший легаси формат
- Согласно последней документации Cursor IDE, файл `.cursorrules` считается deprecated
- Используйте современную структуру в папке `.cursor/` с файлами `.mdc`
